import { createHotContext as __vite__createHotContext } from "/_nuxt/@vite/client";import.meta.hot = __vite__createHotContext("/components/SignUpForm.vue?vue&type=style&index=0&scoped=ecce3aef&lang.css");import { updateStyle as __vite__updateStyle, removeStyle as __vite__removeStyle } from "/_nuxt/@vite/client"
const __vite__id = "/home/khalid/frontend-qa-selection/QA/components/SignUpForm.vue?vue&type=style&index=0&scoped=ecce3aef&lang.css"
const __vite__css = "\n#fileInput[data-v-ecce3aef] {\n    position: absolute;\n    opacity: 0;\n    inset: 0;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */"
__vite__updateStyle(__vite__id, __vite__css)
import.meta.hot.accept()
import.meta.hot.prune(() => __vite__removeStyle(__vite__id))
document.querySelectorAll(`link[href="/_nuxt/components/SignUpForm.vue?vue&type=style&index=0&scoped=ecce3aef&lang.css"]`).forEach(i=>i.remove())
document.querySelectorAll(`link[href="/_nuxt/@fs/components/SignUpForm.vue?vue&type=style&index=0&scoped=ecce3aef&lang.css"]`).forEach(i=>i.remove())