import { createHotContext as __vite__createHotContext } from "/_nuxt/@vite/client";import.meta.hot = __vite__createHotContext("/components/Templates/SignUpForm.vue?vue&type=style&index=0&scoped=ee42eec4&lang.css");import { updateStyle as __vite__updateStyle, removeStyle as __vite__removeStyle } from "/_nuxt/@vite/client"
const __vite__id = "/home/khalid/frontend-qa-selection/QA/components/Templates/SignUpForm.vue?vue&type=style&index=0&scoped=ee42eec4&lang.css"
const __vite__css = "\n#fileInput[data-v-ee42eec4] {\n    position: absolute;\n    opacity: 0;\n    inset: 0;\n}\n\n/*# sourceMappingURL=data:application/json;base64, */"
__vite__updateStyle(__vite__id, __vite__css)
import.meta.hot.accept()
import.meta.hot.prune(() => __vite__removeStyle(__vite__id))
document.querySelectorAll(`link[href="/_nuxt/components/Templates/SignUpForm.vue?vue&type=style&index=0&scoped=ee42eec4&lang.css"]`).forEach(i=>i.remove())
document.querySelectorAll(`link[href="/_nuxt/@fs/components/Templates/SignUpForm.vue?vue&type=style&index=0&scoped=ee42eec4&lang.css"]`).forEach(i=>i.remove())